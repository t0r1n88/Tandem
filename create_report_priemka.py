"""
Скрипт для создания отчетов по приемной кампании на основании данных из Тандем
"""
import pandas as pd
import time
import warnings
warnings.filterwarnings("ignore", category=UserWarning, module="openpyxl")


def processing_report_tandem(name_file_person:str,end_folder:str):
    """

    :param name_file_person: файл полученный во вкладке Отчеты, Выборка абитуриентов
    :param end_folder:
    :return:
    """
    # Получаем текущее время для того чтобы использовать в названии
    t = time.localtime()
    current_time = time.strftime('%H_%M_%d_%m', t)
    person_df = pd.read_excel(name_file_person,sheet_name='Абитуриенты',skiprows=8,dtype=str)

    svod_df = pd.pivot_table(person_df,
                             index=['Формирующее подр.','Набор ОП','Вид возмещения затрат'],
                             values='ФИО',
                             aggfunc='count',
                             margins_name='Итого',
                             margins=True)

    svod_df = svod_df.reset_index()



    svod_df.rename(columns={'ФИО':'Заявлений','Формирующее подр.':'Отделение','Набор ОП':'Конкурс'},inplace=True)

    svod_df['union'] = svod_df['Конкурс'] + ' ' + svod_df['Вид возмещения затрат'] # для соединения


    dct_kcp = {'Набор ОП':['09.02.07 Информационные системы и программирование','43.01.06 Проводник на железнодорожном транспорте','43.02.06 Сервис на транспорте (по видам транспорта)',
                           '43.02.06 Сервис на транспорте (по видам транспорта)','15.01.05 Сварщик (ручной и частично механизированной сварки (наплавки)','15.01.05 Сварщик (ручной и частично механизированной сварки (наплавки)',
                           '15.01.05 ФБ Сварщик (ручной и частично механизированной сварки (наплавки)','15.01.35 Мастер слесарных работ','15.01.35 Мастер слесарных работ',
                           '23.01.10 Слесарь по обслуживанию и ремонту подвижного состава','23.01.10 Слесарь по обслуживанию и ремонту подвижного состава','44.02.06 Профессиональное обучение (по отраслям)',
                           '44.02.06 Профессиональное обучение (по отраслям)','08.01.31 Электромонтажник электрических сетей и электрооборудования РБ','08.01.31 Электромонтажник электрических сетей и электрооборудования РБ',
                           '08.02.09 Монтаж, наладка и эксплуатация электрооборудования промышленных и гражданских зданий','08.02.09 Монтаж, наладка и эксплуатация электрооборудования промышленных и гражданских зданий','13.02.07 Электроснабжение (по отраслям)',
                           '13.02.07 Электроснабжение (по отраслям)','13.02.13 Эксплуатация и обслуживание электрического и электромеханического оборудования (по отраслям)','13.02.13 Эксплуатация и обслуживание электрического и электромеханического оборудования (по отраслям)',
                           '15.01.05 Сварщик (ручной и частично механизированной сварки (наплавки) Хоринский филиал','43.01.09 Повар, кондитер (Хоринский филиал)','35.01.27 Мастер сельскохозяйственного производства ХФ',
                           'Тепловоз. 23.01.09 Машинист локомотива','Тепловоз. 23.01.09 Машинист локомотива','Электровоз. 23.01.09 Машинист локомотива',
                           'Электровоз. 23.01.09 Машинист локомотива'
                           ],
               'Вид приема':['договор','договор','общий',
                             'договор', 'общий', 'договор',
                             'общий', 'общий', 'договор',
                             'общий', 'договор', 'общий',
                             'договор', 'общий', 'договор',
                             'общий', 'договор', 'общий',
                             'договор', 'общий', 'договор',
                             'общий', 'общий', 'общий',
                             'общий', 'договор', 'общий',
                             'договор'],
               'КЦП':[30,25,40,
                      10,50,15,
                      25,25,5,
                      20,20,20,
                      10,40,20,
                      25,5,50,
                      10,25,5,
                      25,20,25,
                      25,25,25,
                      25
                      ]
               }

    # Создаем датафрейм с КЦП
    kcp_df = pd.DataFrame(dct_kcp)
    kcp_df.replace({'договор':'по договору','общий':'бюджет'},inplace=True)
    kcp_df['union'] = kcp_df['Набор ОП'] + ' ' + kcp_df['Вид приема']

    svod_df = svod_df.merge(kcp_df,how='inner',left_on='union',right_on='union')
    svod_df.drop(columns=['union','Набор ОП','Вид приема'],inplace=True)
    svod_df.reindex(columns=['Отделение','Конкурс','Вид возмещения затрат','КЦП','Заявлений'])





    svod_df.to_excel(f'{end_folder}/Ежедневный отчет {current_time}.xlsx',index=False)






if __name__ == '__main__':
    main_file_person = 'data/PersonReport.xlsx'
    main_end_folder= 'data/Результат'
    processing_report_tandem(main_file_person,main_end_folder)

    print('Lindy Booth')
